Factory
        透過一個類別去使用另一個類別的函式來執行一個function
        就像是一個人(物件A)要買一支手機，去跟蘋果買(類別B)，然後蘋果再去找下游廠商(類別C)的製作面板的function

Prototype
        升級版的new，可以複製出一個一樣的物件，甚至可以附加功能
        ex就像是去傳統家具行訂製出和隔壁鄰居一模一樣的家具，
       
Singleton
        設定類別再被需要或是許可時才可以透過這個物件的function來產生這個物件
        ex就像是學校A想要借用科技廠B的廠房製作IC但是必須要透過科技廠B的某些特定流程(function)
       
Adapter
        適合在當物件A想要使用物件B時，卻因為兩者介面而不同時，讓物件A透過adaptor來使用物件B
        
Command
        將不同的功能分別分裝在不同的類別中，使用實再各自建立出來使用
        ex就像是一隻狗(物件)，會跑、叫、咬、吃，他就將這些動作封裝成四個類別使用時在實做出來
        
Decorator
        將物件放到另一個物件中，然後這物件中的物件也可以再放物件
       ex就像是俄羅斯娃娃一樣，可以大到小都包在裡面最後剩一個最大的俄羅斯娃娃
        
Facade
        一個Facade中提供多個不同的類別給其他需要的物件來使用，client端可以透過這個Facade取得這些類別的function來
        產生需要的東西
        ex感覺和factory很像但是規模較大，就像是是一個科學園區裡面有多種不同的科技公司，然只能從科技園區中心(facade)
        來請求這些公司的服務，而factory只是一間科技公司，然後沒有透過科技園區中心來接洽
        
Bridge
        可以從實體延伸出抽象，而這兩者間的關係會變成較鬆
        感覺就像是原本是父子關係父做什麼子做什麼，經過bridge之後變成兄弟，兄做什麼，弟也無感的做自己
        
Oberserver
        物件A更新時發出訊息通知觀察他的物件，讓這些物件依照他們的function來更新
        類似聊天室，聊天室有新訊息在裡面的所有人都會跟著更新出現這條新訊息


Factory Method
        把生產物件的類別中的function再細分為其他的類別
        感覺像是把一個手機工廠中製作面板、外殼、天線的部門分出去，並成立新公司

        
        